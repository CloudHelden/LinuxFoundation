# Woche 1, Tag 3: Benutzerâ€‘ und Gruppenverwaltung in Linux

## Lernziele

* Verstehen, warum Benutzerâ€‘ und Gruppenverwaltung essenziell fÃ¼r Systemâ€‘Sicherheit ist
* Die Kernbefehle zur Anlage, Ã„nderung und Entfernung von Benutzern & Gruppen anwenden
* Dateiberechtigungen (UID/GID, rwx) korrekt interpretieren
* Praktische Szenarien zur Rechtevergabe lÃ¶sen

---

## Warum BenutzerÂ &Â Gruppen?Â (30Â Minuten)

### Die Sicherheitsâ€‘Perspektive

```mermaid
graph TD
A[Systemâ€‘Ressourcen] --> B[Dateien]
A --> C[Prozesse]
A --> D[Netzwerkâ€‘Ports]
B --> E[Zugriff durch Benutzer]
C --> F[AusfÃ¼hrung durch Benutzer]
D --> G[Ã–ffnen durch Prozesse]
E --> H[Berechtigungen steuern]
F --> H
G --> H
H --> I[Benutzerâ€‘ &Â Gruppenâ€‘Kontrolle]
```

**SchlÃ¼sselgedanken**

1. **Leastâ€‘Privilegeâ€‘Prinzip**: Jeder Dienst lÃ¤uft mit minimalen Rechten.
2. **Auditierbarkeit**: Aktionen sind einem UID/GID zuordenbar.
3. **Rollenmodell**: Gruppen bÃ¼ndeln identische Berechtigungen.

---

## BenutzerverwaltungÂ (45Â Minuten)

### Kernbefehle & Konzepte

| Aktion                         | Befehl                  | ErlÃ¤uterung                                 |
| ------------------------------ | ----------------------- | ------------------------------------------- |
| Interaktiven Benutzer anlegen  | `sudo adduser alice`    | Erstellt Home, fragt PasswortÂ â€“ *empfohlen* |
| Lowâ€‘Level Benutzer anlegen     | `sudo useradd alice`    | Keine Interaktion, zusÃ¤tzliche Flags nÃ¶tig  |
| Passwort setzen                | `sudo passwd alice`     | Ã„ndert/erstellt Passwort                    |
| Benutzerinformationen anzeigen | `id alice`              | Zeigt UID, GID, Gruppen                     |
| TemporÃ¤r zum Benutzer wechseln | `suÂ -Â alice`            | Neue Loginâ€‘Shell                            |
| Befehl als Benutzer ausfÃ¼hren  | `sudo -u alice <cmd>`   | *Privileges on demand*                      |
| Benutzer sperren               | `sudo usermod -L alice` | Passwortâ€‘Hash wird deaktiviert              |
| Benutzer lÃ¶schen (inkl. Home)  | `sudo userdelÂ â€‘rÂ alice` | Entfernt Account &Â Home                     |

> **Hinweis:** Alle Accountâ€‘EintrÃ¤ge liegen in `/etc/passwd`, Passwortâ€‘Hashes in `/etc/shadow`.

### Benutzerâ€‘Attribute

```text
UID Â Â Â : 0 = root, 1â€‘99 = System, 100â€‘59999 = regulÃ¤r
GID Â Â Â : PrimÃ¤re Gruppe des Accounts
/homeÂ  : Standardspeicherort fÃ¼r persÃ¶nliche Daten
shell : Loginâ€‘Shell, Ã¼blicherweise /bin/bash
```

---

## GruppenverwaltungÂ (30Â Minuten)

### Gruppenbefehle

| Aktion                        | Befehl                        |
| ----------------------------- | ----------------------------- |
| Neue Gruppe anlegen           | `sudo groupadd devs`          |
| Benutzer zu Gruppe hinzufÃ¼gen | `sudo usermodÂ â€‘aG devs alice` |
| Benutzer aus Gruppe entfernen | `sudo gpasswdÂ â€‘d alice devs`  |
| Gruppe lÃ¶schen                | `sudo groupdel devs`          |

### PrimÃ¤reÂ vs.Â SekundÃ¤re Gruppen

```mermaid
graph LR
subgraph "Account"
U[alice (UIDÂ 1001)]
end
subgraph "Gruppen"
G1[(alice)]
G2[(devs)]
G3[(sudo)]
end
U -- primÃ¤r --> G1
U -- sekundÃ¤r --> G2
U -- sekundÃ¤r --> G3
```

*PrimÃ¤re Gruppe* bestimmt Besitz neuer Dateien; *sekundÃ¤re Gruppen* gewÃ¤hren zusÃ¤tzliche Rechte.

---

## Dateibesitz & BerechtigungenÂ (30Â Minuten)

### Klassisches `rwx`â€‘Modell

```text
           User  Group  Other
Symbolisch  rwx   râ€‘x    râ€‘â€‘
Oktal       7     5      4
```

* **r** = read (4)Â Â **w** = write (2)Â Â **x** = execute (1)
* Besitz Ã¤ndern: `sudo chown alice:devs project.txt`
* Rechte setzen: `chmodÂ 754 project.txt`
* Setuid/Setgid/Sticky verstehen (`chmodÂ 4755 file`)

---

## Praktisches Labor: Benutzerâ€‘ &Â GruppenverwaltungÂ (60Â Minuten)

### Laborâ€‘Ziele

1. Zwei neue Accounts anlegen und konfigurieren
2. Gemeinsames Projektâ€‘Verzeichnis mit Gruppenrechten erstellen
3. **sudo**â€‘Rechte sicher vergeben
4. Dateiâ€‘Besitz & Berechtigungen verifizieren

### Laborâ€‘Aufgaben

#### AufgabeÂ 1Â â€“ Accounts anlegen

```bash
sudo adduser alice   # Passwort setzen
sudo adduser bob
```

#### AufgabeÂ 2Â â€“ Gemeinsame Gruppe & Verzeichnis

```bash
# Gruppe erstellen
auth="project"
sudo groupadd $auth
# Benutzer hinzufÃ¼gen
for u in alice bob; do sudo usermod -aG $auth $u; done
# Verzeichnis + Rechte
sudo mkdir /srv/shared
sudo chown root:$auth /srv/shared
sudo chmod 2775 /srv/shared   # setgid-Bit
```

#### AufgabeÂ 3Â â€“ Sudo fÃ¼r Alice

```bash
sudo usermod -aG sudo alice
```

#### AufgabeÂ 4Â â€“ Tests &Â Validierung

```bash
# Als Alice wechseln
su - alice -c "touch /srv/shared/test.txt && ls -l /srv/shared/test.txt"
# PrÃ¼fen, dass Gruppe = project
ls -ld /srv/shared
# Als Bob Datei lesen
su - bob -c "cat /srv/shared/test.txt"
```

### Laborâ€‘Fragen

1. Welche UID hat **bob**?
2. Welche Gruppenmitgliedschaften hat **alice**?
3. Warum wird bei `/srv/shared` die **GID** automatisch auf **project** gesetzt?
4. Welche Rechte mÃ¼ssen mindestens gesetzt sein, damit Bob *Datei A* lesen kann?

---

## Wichtige Erkenntnisse

1. **Root ist mÃ¤chtig** â€“ arbeite mit sudo, nicht dauerhaft als root
2. **Least Privilege** â€“ gib nur benÃ¶tigte Gruppenrechte
3. **Setgidâ€‘Verzeichnisse**Â erben die Gruppenâ€‘ID neuer Dateien
4. **`/etc/passwd`**\*\* â‰  PasswÃ¶rter\*\* â€“ Passwortâ€‘Hashes liegen in `/etc/shadow`
5. **Abâ€‘ &Â Anmelden nÃ¶tig** nach GruppenÃ¤nderungen

## HÃ¤ufige AnfÃ¤ngerfehler

* Mit `useradd` statt `adduser` starten und dann kein Home/Passwort haben
* `chmodÂ 777` fÃ¼r â€žschnelleâ€œ LÃ¶sungen verwenden
* GruppenÃ¤nderungen testen, ohne sich neu anzumelden
* PasswÃ¶rter im Klartext via `echo "pass" | passwd` setzen

---

## ZusÃ¤tzliche Ressourcen

* [GNU coreutils useradd(8)Â Handbuch](https://man7.org/linux/man-pages/man8/useradd.8.html)
* [Linux Journey â€“ Users & Groups](https://linuxjourney.com/lesson/users-and-groups)
* [ExplainShell â€“ Interaktive Befehlsanalyse](https://explainshell.com/)

## Mermaidâ€‘Visuals: Beziehungen auf einen Blick

### 1. PrimÃ¤re vs. SekundÃ¤re Gruppen

```mermaid
graph TD
  subgraph Users
    A[alice]
    B[bob]
  end
  subgraph PrimÃ¤re_Gruppen
    GA[(alice)]
    GB[(bob)]
  end
  subgraph SekundÃ¤re_Gruppen
    GP[(project)]
    GS[(sudo)]
  end
  A --primÃ¤r--> GA
  B --primÃ¤r--> GB
  A --Mitglied--> GP
  B --Mitglied--> GP
  A --Mitglied--> GS
```

### 2. Setgidâ€‘Verzeichnis und geerbte Gruppenâ€‘ID

```mermaid
flowchart LR
    srv[/srv/shared\n(setgid)] -- "touch test.txt" --> file[test.txt]
    srv -- GID: project --> gid_proj[(project)]
    file -- erbt --> gid_proj
```

### 3. Dateiberechtigungen Matrix

```mermaid
erDiagram
  FILE ||--|| OWNER : besitzt
  FILE ||--|| GROUP : gruppiert
  FILE {
    string Name
    string rwx_User
    string rwx_Group
    string rwx_Other
  }
  OWNER {
    int UID
    string Username
  }
  GROUP {
    int GID
    string Groupname
  }
```

---

## Quickâ€‘ReferenceÂ CheatÂ SheetÂ (1â€‘Pager)

| Zweck                         | Befehl / Datei                                  | Notiz                         |
| ----------------------------- | ----------------------------------------------- | ----------------------------- |
| Alle Benutzer anzeigen        | `cut -d: -f1 /etc/passwd`                       | Nur Namen                     |
| Details eines Benutzers       | `id alice`                                      | UID/GID & Gruppen             |
| Alle Gruppen anzeigen         | `cut -d: -f1 /etc/group`                        | Nur Gruppennamen              |
| Gruppen eines Users           | `groups alice`                                  | SekundÃ¤r + primÃ¤r             |
| TemporÃ¤r neue Gruppensitzung  | `newgrp project`                                | Ohne Abmelden                 |
| Liste sudoâ€‘Berechtigungen     | `sudo -l -U alice`                              | Welche Befehle erlaubt?       |
| Benutzer mit useradd komplett | `sudo useradd -m -s /bin/bash -U -G sudo alice` | Lowâ€‘Level, aber *vollstÃ¤ndig* |
| Standardâ€‘Dateirechte prÃ¼fen   | `umask`                                         | 0022 = 755/644                |
| ACL statt rwx verwenden       | `setfacl -m u:bob:rwx file`                     | Erweiterte Rechte             |

> ðŸ’¡ **Merksatz**: â€ž*adduser fragt, useradd sagt nichts.*â€œ â€“ wenn der Befehl schweigt, musst **du** denken.

### Flow: adduserÂ vsÂ useradd

```mermaid
flowchart TB
  start([Start]) --> q{Interaktiv?}
  q -- Ja --> adduser[adduser]
  adduser --> done1([Fertiges Home + Passwort])
  q -- Nein --> useradd[useradd]
  useradd --> flags{Mit Flags?}
  flags -- -m -s /bin/bash ... --> done2([Fertiges Home + Passwort])
  flags -- keine Flags --> pitfall([Kein Home, kein Passwort!])
  pitfall --> fix[Nacharbeiten mit passwd & mkdir]
```

---

## HÃ¤ufig gestellte FragenÂ (FAQ)

1. **Wie Ã¤ndere ich den Benutzernamen?**
   `sudo usermod -l neuername -d /home/neuername -m altername`
2. **Wie setze ich ein Ablaufdatum fÃ¼r Accounts?**
   `sudo chage -E 2025-12-31 alice`
3. **Was ist eine *****User Private Group***** (UPG)?**
   Moderne Distros legen fÃ¼r jeden Benutzer automatisch eine gleichnamige Gruppe an. Vorteil: sichere `umask 0002`Â â€“ Dateien gehÃ¶ren der persÃ¶nlichen Gruppe, nicht `users`.
4. **Welche Shell steht dem Benutzer zur VerfÃ¼gung?**
   In `/etc/passwd` â€“ Feld 7. Ã„ndern mit `sudo chsh -s /usr/bin/zsh alice`.
5. **Wie Ã¼bertrage ich das komplette Home auf einen anderen Server?**
   `sudo rsync -aAX /home/alice root@server:/home/`

---

## Troubleshooting: Typische Fehlermeldungen & LÃ¶sungen

| Meldung                                      | Ursache                                | Fix                                                            |
| -------------------------------------------- | -------------------------------------- | -------------------------------------------------------------- |
| `Permission denied` beim `su alice`          | Passwort gesperrt (`!` im /etc/shadow) | `sudo passwd -u alice`                                         |
| `No directory, logging in with HOME=/`       | Homeâ€‘Verzeichnis fehlt                 | `sudo mkdir /home/alice && sudo chown alice:alice /home/alice` |
| `id: â€šaliceâ€˜: no such user`                  | Schreibfehler oder User gelÃ¶scht       | `grep alice /etc/passwd` checken                               |
| `groups: cannot find name for group ID 1005` | /etc/groupâ€‘Eintrag fehlt               | `sudo groupadd -g 1005 missing && sudo usermod -g 1005 alice`  |

---

## Miniâ€‘QuizÂ (5Â Fragen zur SelbstprÃ¼fung)

1. **Welche Datei enthÃ¤lt Passwortâ€‘Hashes?**  (a) `/etc/shadow`  (b) `/etc/passwd`  (c) `/etc/group`
2. Welches Flag sorgt dafÃ¼r, dass `useradd` ein Homeâ€‘Verzeichnis erstellt?
   a) `-U`  b) `-s`  c) `-m`  d) `-G`
3. Ein Verzeichnis hat die Rechte `2775`. Welche Bedeutung hat die fÃ¼hrende `2`?
4. Wie kannst du ohne Abmelden sofort in eine neue Gruppe `docker` wechseln?
5. `chmod 640 file` â€“ wer kann **nicht** schreiben?

> **Antworten:** 1â€‘aÂ Â 2â€‘cÂ Â 3â€¯=â€¯setgidâ€‘BitÂ Â 4â€¯`newgrp docker`Â Â 5Â â€žOtherâ€œ & â€žGroupâ€œ (nur Owner hat wâ€‘Bit)

---

## Weitere Vertiefung

* **Skeletonâ€‘Verzeichnis (****`/etc/skel`****)**: Nutze es, um Standardâ€‘Dateien (z.â€¯B. `.bashrc`) fÃ¼r neue Benutzer vorzubereiten.

  ```bash
  echo '# Willkommen!' | sudo tee /etc/skel/README.txt
  ```

---
